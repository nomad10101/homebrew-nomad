# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
require_relative "../custom_download_strategy"
class Cserver < Formula
  desc ""
  homepage "https://github.com/nomad10101/cloudback"
  version "0.0.50"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/nomad10101/cloudback/releases/download/v0.0.50/cloudback_Darwin_x86_64.tar.gz", using: GitHubPrivateRepositoryReleaseDownloadStrategy
      sha256 "1d58c5b0666e7e2a990c21ef6526d9bb0bbdb4f38f1574f6fa16eb6a7219f3ec"

      def install
        bin.install "cserver"
        prefix.install Dir["assets"]
        prefix.install_symlink Dir["assets"]
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/nomad10101/cloudback/releases/download/v0.0.50/cloudback_Darwin_arm64.tar.gz", using: GitHubPrivateRepositoryReleaseDownloadStrategy
      sha256 "8f863eacb50a0c016cfbeaa0704d37bbd7b3563aa2c390ad05c693f4ac0f0f1c"

      def install
        bin.install "cserver"
        prefix.install Dir["assets"]
        prefix.install_symlink Dir["assets"]
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/nomad10101/cloudback/releases/download/v0.0.50/cloudback_Linux_arm64.tar.gz", using: GitHubPrivateRepositoryReleaseDownloadStrategy
      sha256 "73c6bed427b00f127518e6446d7f2e0c0b67ce8527cab06d57789a999474cb87"

      def install
        bin.install "cserver"
        prefix.install Dir["assets"]
        prefix.install_symlink Dir["assets"]
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/nomad10101/cloudback/releases/download/v0.0.50/cloudback_Linux_x86_64.tar.gz", using: GitHubPrivateRepositoryReleaseDownloadStrategy
      sha256 "7ac7e9dca9346c52f3d24e8838134cb76b4f635e2888a04009dfc0380ba26de5"

      def install
        bin.install "cserver"
        prefix.install Dir["assets"]
        prefix.install_symlink Dir["assets"]
      end
    end
  end

  def caveats
    <<~EOS
      ****************************************************************
      Listen up...
      ****************************************************************
    EOS
  end

  service do
    run [opt_bin/"cserver", "--assets-path", opt_prefix/"assets", "service"]
    environment_variables BREW_OPT_HOME: opt_prefix
    keep_alive true
  end
end
